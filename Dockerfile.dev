# Set the base image
FROM arm64v8/python:3.8-slim AS builder

# Install linux dependencies
RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y gcc \
        build-essential pkg-config libusb-1.0 curl git \
        sudo libudev-dev libssl-dev vim && \
    rm -rf /var/lib/apt/lists/*

# Add hummingbot user and group
RUN groupadd -g 8211 hummingbot && \
    useradd -m -s /bin/bash -u 8211 -g 8211 hummingbot

# Switch to hummingbot user
USER hummingbot:hummingbot
WORKDIR /home/hummingbot

# Install miniconda
RUN curl https://repo.anaconda.com/miniconda/Miniconda3-py38_4.10.3-Linux-aarch64.sh -o ~/miniconda.sh && \
    /bin/bash ~/miniconda.sh -b && \
    rm ~/miniconda.sh && \
    ~/miniconda3/bin/conda update -n base conda -y && \
    ~/miniconda3/bin/conda clean -tipy

# Dropping default ~/.bashrc because it will return if not running as interactive shell, thus not invoking PATH settings
RUN :> ~/.bashrc

# Copy environment only to optimize build caching, so changes in sources will not cause conda env invalidation
COPY --chown=hummingbot:hummingbot setup/environment-linux-aarch64.yml setup/

# ./install | create hummingbot environment
RUN ~/miniconda3/bin/conda env create -f setup/environment-linux-aarch64.yml && \
    ~/miniconda3/bin/conda clean -tipy && \
    # clear pip cache
    rm -rf /home/hummingbot/.cache

# activate hummingbot env when entering the CT
RUN echo "source /home/hummingbot/miniconda3/etc/profile.d/conda.sh && conda activate $(head -1 setup/environment-linux-aarch64.yml | cut -d' ' -f2)" >> ~/.bashrc

# ./compile + cleanup build folder
# RUN /home/hummingbot/miniconda3/envs/$(head -1 setup/environment-linux-aarch64.yml | cut -d' ' -f2)/bin/python3 setup.py build_ext --inplace -j 8 && \
#     rm -rf build/ && \
#     find . -type f -name "*.cpp" -delete

#
# Ready to start
#

# additional configs (sudo)
COPY docker/etc /etc

# Setting bash as default shell because we have .bashrc with customized PATH (setting SHELL affects RUN, CMD and ENTRYPOINT, but not manual commands e.g. `docker run image COMMAND`!)
SHELL [ "/bin/bash", "-lc" ]
CMD '/bin/bash'